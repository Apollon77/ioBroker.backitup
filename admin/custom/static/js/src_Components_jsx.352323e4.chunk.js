"use strict";(self.webpackChunkiobroker_admin_component_backitup=self.webpackChunkiobroker_admin_component_backitup||[]).push([["src_Components_jsx"],{20507:(M,v,s)=>{s.r(v),s.d(v,{default:()=>F});var u=s(1810),g=s(98360),k=s(86207),y=s(37451),C=s(35665),A=s(95520),I=s(15780),D=s(32149),b=s(35022),B=s(95973),i=s.n(B),r=s(37449),S=s(85903),E=Object.getPrototypeOf,O=Reflect.get,x=(l,t,e)=>O(E(l),e,t),m=(l,t,e)=>new Promise((n,o)=>{var h=a=>{try{c(e.next(a))}catch(f){o(f)}},p=a=>{try{c(e.throw(a))}catch(f){o(f)}},c=a=>a.done?n(a.value):Promise.resolve(a.value).then(h,p);c((e=e.apply(l,t)).next())});class d extends S.A{constructor(t){super(t),this.storedAlive=this.props.alive,this.storedChecked=!1}checkConfiguration(){this.props.alive&&!this.storedChecked&&(this.storedChecked=!0,this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`,"getFileSystemInfo",null).then(t=>{t!=null&&t.diskState&&t.storage&&t.diskFree&&(t.diskState==="warn"&&t.storage==="local"?this.showMessage(r.I18n.t("On the host only %s MB free space is available! Please check your system!",t.diskFree),r.I18n.t("BackItUp Information!")):t.diskState==="error"&&t.storage==="local"&&this.showMessage(r.I18n.t(`On the host only %s MB free space is available! Local backups are currently not possible.

Please check your system!`,t.diskFree),r.I18n.t("BackItUp Information!"),"warning"))}),this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`,"getSystemInfo",null).then(t=>m(this,null,function*(){let e=!1;(t==null?void 0:t.systemOS)==="docker"&&t.dockerDB===!1?(this.props.data._isDockerDB=!1,this.props.data.influxDBEnabled&&(this.props.data.influxDBEnabled=!1,e=!0),this.props.data.mySqlEnabled&&(this.props.data.mySqlEnabled=!1,e=!0),this.props.data.sqliteEnabled&&(this.props.data.sqliteEnabled=!1,e=!0),this.props.data.pgSqlEnabled&&(this.props.data.pgSqlEnabled=!1,e=!0),this.props.data.startAllRestore&&(this.props.data.startAllRestore=!1,e=!0),e&&this.props.onChange(this.props.data),this.props.data.redisType!=="remote"&&this.props.data.redisEnabled&&(this.props.data.redisType="remote",e=!0),e=!0):(t==null?void 0:t.systemOS)==="docker"&&t.dockerDB===!0?(this.props.data._isDockerDB=!0,e=!0):(t==null?void 0:t.systemOS)!=="docker"&&(this.props.data._isDockerDB=!0,e=!0),(t==null?void 0:t.systemOS)==="docker"?(e=!0,this.props.data._restoreIfWait=1e4):(t==null?void 0:t.systemOS)==="win"&&(e=!0,this.props.data._restoreIfWait=18e3);const n=["ccu","mySql","sqlite","pgSql","influxDB","history"];for(let o=0;o<n.length;o++)if(!this.isConfigFilled(n[o])){const h=yield this.fetchConfig(n[o],this.props.data).catch(p=>this.showError(p));e=e||h.changed}})))}componentDidMount(){return m(this,null,function*(){x(d.prototype,this,"componentDidMount").call(this),this.storedAlive&&!this.props.data.cifsEnabled&&!this.storedChecked&&this.checkConfiguration()})}renderItem(){return this.storedAlive!==this.props.alive&&(this.storedAlive=this.props.alive,this.storedAlive&&!this.props.data.cifsEnabled&&!this.storedChecked&&this.checkConfiguration()),this.renderMessage()}}d.propTypes={socket:i().object.isRequired,themeType:i().string,themeName:i().string,style:i().object,className:i().string,data:i().object.isRequired,attr:i().string,schema:i().object,onError:i().func,onChange:i().func};const j=d,F={AdapterExist:u.A,BackupNow:g.A,DetectConfig:k.A,GoogleDrive:C.A,Onedrive:A.A,Dropbox:I.A,CheckConfigInvisible:y.A,Instance:D.A,RestoreBackup:b.A,CheckAllConfigInvisible:j}}}]);

//# sourceMappingURL=src_Components_jsx.352323e4.chunk.js.map