{"version":3,"file":"static/js/src_bootstrap_jsx.5016d3f8.chunk.js","mappings":"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","sources":["BaseField.jsx","AdapterExist.jsx","BackupNow.jsx","DetectConfig.jsx","GoogleDrive.jsx","DetectConfigInvisible.jsx","App.jsx","theme.js","bootstrap.jsx"],"sourcesContent":["import { ConfigGeneric, I18n, Message } from '@iobroker/adapter-react-v5';\r\n\r\nclass BaseField extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.message = false;\r\n    }\r\n\r\n    fetchCcuConfig = async () => {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.hm-rpc.', 'system.adapter.hm-rpc.\\u9999'));\r\n\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                if (common.enabled) {\r\n                    const native = result[i].native;\r\n                    this.props.onChange({ ...this.props.data, ccuHost: native.homematicAddress, ccuUsehttps: native.useHttps });\r\n                    this.props.onChange({ ...this.props.data, ccuHost: native.homematicAddress, ccuUsehttps: native.useHttps });\r\n                    found = result[i]._id;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    const _native = result[j].native;\r\n                    this.props.onChange({ ...this.props.data, ccuHost: _native.homematicAddress, ccuUsehttps: _native.useHttps });\r\n                    this.props.onChange({ ...this.props.data, ccuHost: _native.homematicAddress, ccuUsehttps: _native.useHttps });\r\n                    found = result[j]._id;\r\n                }\r\n            }\r\n        }\r\n        if (found) {\r\n            found = found.substring('system.adapter.'.length);\r\n            this.showMessage(I18n.t('Backitup Information!'), I18n.t('Config taken from %s', found));\r\n        } else {\r\n            this.showMessage(I18n.t('Backitup Warning!'), I18n.t('No config found'));\r\n        }\r\n    };\r\n\r\n    checkAdapterInstall = async name => {\r\n        const backitupHost = this.props.common.host;\r\n        const ignore = false;\r\n        let adapterName = name;\r\n\r\n        if (name === 'pgsql' || name === 'mysql' || name === 'sqlite') {\r\n            adapterName = 'sql';\r\n        }\r\n\r\n        if (!ignore) {\r\n            const res = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', `system.adapter.${adapterName}.`, `system.adapter.${adapterName}.\\u9999`));\r\n            if (res && res.length) {\r\n                for (let i = 0; i < res.length; i++) {\r\n                    const common = res[i].common;\r\n\r\n                    if (common.host !== backitupHost && (adapterName === 'zigbee' || adapterName === 'esphome' || adapterName === 'zigbee2mqtt' || adapterName === 'node-red' || adapterName === 'yahka' || adapterName === 'jarvis' || adapterName === 'history')) {\r\n                        this.showMessage(I18n.t('Backitup Warning!'), I18n.t('No %s Instance found on this host. Please check your System', adapterName));\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (res.length === 0 && (adapterName === 'zigbee' || adapterName === 'esphome' || adapterName === 'zigbee2mqtt' || adapterName === 'node-red' || adapterName === 'yahka' || adapterName === 'jarvis' || adapterName === 'history')) {\r\n                this.showMessage(I18n.t('Backitup Warning!'), I18n.t('No %s Instance found on this host. Please check your System', adapterName));\r\n            }\r\n        }\r\n    };\r\n\r\n    showMessage = (title, text) => {\r\n        this.setState({ message: { title, text } });\r\n    };\r\n\r\n    renderMessage() {\r\n        return this.state.message && <Message\r\n            title={this.state.message.title}\r\n            text={this.state.message.text}\r\n            onClose={() => this.setState({ message: false })}\r\n        />;\r\n    }\r\n}\r\n\r\nexport default BaseField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport { i18n as I18n } from '@iobroker/adapter-react-v5';\r\nimport { Checkbox, FormControlLabel } from '@mui/material';\r\nimport BaseField from './BaseField';\r\n\r\nconst styles = () => ({\r\n\r\n});\r\n\r\nclass AdapterExist extends BaseField {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.message = false;\r\n    }\r\n\r\n    renderItem() {\r\n        return <>\r\n            <FormControlLabel\r\n                control={<Checkbox\r\n                    onChange={async () => {\r\n                        this.checkAdapterInstall('influxdb');\r\n                    }}\r\n                />}\r\n                label={I18n.t('Adapter exist')}\r\n            />\r\n            {this.renderMessage()}\r\n        </>;\r\n    }\r\n}\r\n\r\nAdapterExist.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(AdapterExist);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport { ConfigGeneric, i18n as I18n } from '@iobroker/adapter-react-v5';\r\nimport {\r\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, TextField,\r\n} from '@mui/material';\r\nimport { CloudUpload } from '@mui/icons-material';\r\n\r\nconst styles = () => ({\r\n\r\n});\r\n\r\nclass BackupNow extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            executing: false,\r\n            executionDialog: false,\r\n            executionLog: '',\r\n            lastExecutionLine: '',\r\n            closeOnReady: false,\r\n        };\r\n    }\r\n\r\n    onOutput = (id, value)  => {\r\n        if (value && value.val && value.val !== this.state.lastExecutionLine) {\r\n            this.setState({\r\n                executionLog: `${this.state.executionLog + value.val}\\n`,\r\n                lastExecutionLine: value.val,\r\n            });\r\n            if (value.val === '[EXIT] 0') {\r\n                this.setState({ executing: false });\r\n                if (this.state.closeOnReady) {\r\n                    this.setState({ executionDialog: false });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.output.line`, this.onOutput);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.output.line`, this.onOutput);\r\n    }\r\n\r\n    renderExecutionDialog() {\r\n        return <Dialog\r\n            open={this.state.executionDialog}\r\n            onClose={() => this.setState({ executionDialog: false })}\r\n            maxWidth=\"md\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle>\r\n                {I18n.t('Backitup execution:')}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    multiline\r\n                    fullWidth\r\n                    inputProps={{ style: { height: 400 } }}\r\n                    value={this.state.executionLog}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={this.state.closeOnReady}\r\n                            onChange={e => this.setState({ closeOnReady: e.target.checked })}\r\n                        />\r\n                    }\r\n                    label={I18n.t('Close on ready')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => this.setState({ executionDialog: false })}\r\n                >\r\n                    {I18n.t('Close')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    }\r\n\r\n    renderItem() {\r\n        return <>\r\n            <Button\r\n                onClick={async () => {\r\n                    this.setState({ executionDialog: true, executionLog: '', executing: true });\r\n                    await this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.oneClick.ccu`, true);\r\n                }}\r\n                variant=\"contained\"\r\n                endIcon={<CloudUpload />}\r\n            >\r\n                {I18n.t('Backup now')}\r\n            </Button>\r\n            {this.renderExecutionDialog()}\r\n        </>;\r\n    }\r\n}\r\n\r\nBackupNow.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(BackupNow);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport { i18n as I18n } from '@iobroker/adapter-react-v5';\r\nimport { Button } from '@mui/material';\r\nimport { Search } from '@mui/icons-material';\r\nimport BaseField from './BaseField';\r\n\r\nconst styles = () => ({\r\n\r\n});\r\n\r\nclass DetectConfig extends BaseField {\r\n    renderItem() {\r\n        return <>\r\n            <Button\r\n                variant=\"contained\"\r\n                endIcon={<Search />}\r\n                onClick={async () => {\r\n                    this.fetchCcuConfig();\r\n                }}\r\n            >\r\n                {I18n.t('Detect config')}\r\n            </Button>\r\n            {this.renderMessage()}\r\n        </>;\r\n    }\r\n}\r\n\r\nDetectConfig.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(DetectConfig);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport { ConfigGeneric, i18n as I18n } from '@iobroker/adapter-react-v5';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { CloudUpload } from '@mui/icons-material';\r\n\r\nconst styles = () => ({\r\n\r\n});\r\n\r\nclass GoogleDrive extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.googleDriveUrl = '';\r\n    }\r\n\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n        const object = await this.props.socket.getObject(`system.adapter.${this.props.adapterName}.${this.props.instance}`);\r\n        if (object && object.native) {\r\n            this.setState({ native: object.native });\r\n        }\r\n    }\r\n\r\n    renderItem() {\r\n        if (!this.state.native) {\r\n            return null;\r\n        }\r\n        return <div>\r\n            <div>\r\n                <Button\r\n                    endIcon={<CloudUpload />}\r\n                    variant=\"contained\"\r\n                    onClick={async () => {\r\n                        const result = await this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'authGoogleDrive');\r\n                        this.setState({ googleDriveUrl: result.url });\r\n                    }}\r\n                >\r\n                    {I18n.t(\r\n                        this.state.native.googledriveAccessTokens ?\r\n                            'Renew google drive access' :\r\n                            'Get google drive access',\r\n                    )}\r\n                </Button>\r\n            </div>\r\n            {this.state.googleDriveUrl ? <>\r\n                <div>\r\n                    {`${I18n.t('Authorize this app by visiting this url')}: `}\r\n                    <a\r\n                        target=\"_blank\"\r\n                        href={this.state.googleDriveUrl}\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        {this.state.googleDriveUrl}\r\n                    </a>\r\n                </div>\r\n                <div>\r\n                    <TextField\r\n                        label={I18n.t('Enter the code from that page here')}\r\n                        variant=\"standard\"\r\n                        value={this.props.data.googledriveAccessTokens || ''}\r\n                        onChange={e => this.props.onChange({ ...this.props.data, googledriveAccessTokens: e.target.value })}\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n            </> : null}\r\n        </div>;\r\n    }\r\n}\r\n\r\nGoogleDrive.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(GoogleDrive);\r\n","import PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport BaseField from './BaseField';\r\n\r\nconst styles = () => ({\r\n\r\n});\r\n\r\nclass DetectConfigInvisible extends BaseField {\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.fetchCcuConfig();\r\n    }\r\n\r\n    renderItem() {\r\n        return this.renderMessage();\r\n    }\r\n}\r\n\r\nDetectConfigInvisible.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(DetectConfigInvisible);\r\n","// this file used only for simulation and not used in end build\r\n\r\nimport React from 'react';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\r\nimport I18n from '@iobroker/adapter-react-v5/i18n';\r\nimport Loader from '@iobroker/adapter-react-v5/Components/Loader';\r\n\r\nimport AdapterExist from './AdapterExist';\r\nimport BackupNow from './BackupNow';\r\nimport DetectConfig from './DetectConfig';\r\nimport GoogleDrive from './GoogleDrive';\r\nimport DetectConfigInvisible from './DetectConfigInvisible';\r\n\r\nconst styles = theme => ({\r\n    app: {\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        height: '100%',\r\n    },\r\n    item: {\r\n        padding: 50,\r\n        width: 400,\r\n    },\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        super(props, extendedProps);\r\n\r\n        this.state = {\r\n            data: { myCustomAttribute: 'red' },\r\n            theme: this.createTheme(),\r\n        };\r\n        const translations = {\r\n            en: require('./i18n/en'),\r\n            de: require('./i18n/de'),\r\n            ru: require('./i18n/ru'),\r\n            pt: require('./i18n/pt'),\r\n            nl: require('./i18n/nl'),\r\n            fr: require('./i18n/fr'),\r\n            it: require('./i18n/it'),\r\n            es: require('./i18n/es'),\r\n            pl: require('./i18n/pl'),\r\n            uk: require('./i18n/uk'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        I18n.setTranslations(translations);\r\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <StyledEngineProvider injectFirst>\r\n                <ThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType} />\r\n                </ThemeProvider>\r\n            </StyledEngineProvider>;\r\n        }\r\n\r\n        return <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={this.state.theme}>\r\n                <div className={this.props.classes.app}>\r\n                    <div className={this.props.classes.item}>\r\n                        <AdapterExist\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomTelegramSet/Components/TelegramComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <BackupNow\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomTelegramSet/Components/TelegramComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <DetectConfig\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomTelegramSet/Components/TelegramComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <DetectConfigInvisible\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomTelegramSet/Components/TelegramComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                        <GoogleDrive\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr=\"myCustomAttribute\"\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomTelegramSet/Components/TelegramComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                            adapterName=\"backitup\"\r\n                            common={this.common}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// this file used only for simulation and not used in end build\r\nimport Theme from '@iobroker/adapter-react-v5/Theme';\r\n\r\nexport default type => {\r\n    const danger = '#dd5325';\r\n    const success = '#73b6a8';\r\n    const theme = { ...Theme(type) };\r\n    if (!theme) {\r\n        return theme;\r\n    }\r\n    theme.palette.text.danger = {\r\n        color: danger,\r\n    };\r\n    theme.palette.text.success = {\r\n        color: success,\r\n    };\r\n\r\n    return theme;\r\n};","// this file used only for simulation and not used in end build\r\n\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\nimport Utils from '@iobroker/adapter-react-v5/Components/Utils';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nwindow.adapterName = 'adapter-component-template';\r\nlet themeName = Utils.getThemeName();\r\n\r\nfunction build() {\r\n    const container = document.getElementById('root');\r\n    const root = createRoot(container);\r\n    return root.render(<React.StrictMode>\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme(themeName)}>\r\n                <App\r\n                    socket={{port: 8081}}\r\n                    onThemeChange={(_theme) => {\r\n                        themeName = _theme;\r\n                        build();\r\n                    }}\r\n                    adapterName=\"backitup\"\r\n                />\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    </React.StrictMode>);\r\n}\r\n\r\nbuild();"],"names":["BaseField","props","result","found","i","native","j","_native","name","backitupHost","ignore","adapterName","res","title","text","styles","AdapterExist","BackupNow","id","value","DetectConfig","GoogleDrive","object","DetectConfigInvisible","theme","App","extendedProps","translations","StyledEngineProvider","ThemeProvider","data","withStyles","type","danger","success","Theme","themeName","build","container","_theme"],"sourceRoot":""}