{"version":3,"file":"static/js/src_AdapterExist_jsx-src_BackupNow_jsx-src_DetectConfig_jsx-src_DetectConfigInvisible_jsx-src-da93ea.5d5b3df6.chunk.js","mappings":"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","sources":["AdapterExist.jsx","BackupNow.jsx","BaseField.jsx","DetectConfig.jsx","DetectConfigInvisible.jsx","GoogleDrive.jsx","Instance.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { I18n } from '@iobroker/adapter-react-v5';\r\nimport { Checkbox, FormControlLabel } from '@mui/material';\r\nimport BaseField from './BaseField';\r\n\r\nclass AdapterExist extends BaseField {\r\n    renderItem() {\r\n        return <>\r\n            <FormControlLabel\r\n                control={<Checkbox\r\n                    checked={this.props.data[this.props.attr] || false}\r\n                    onChange={async e => {\r\n                        if (e.target.checked) {\r\n                            if (this.props.schema.adapter) {\r\n                                this.checkAdapterInstall(this.props.schema.adapter)\r\n                                    .catch(err => console.error(err));\r\n                            } else if (this.props.schema.alert) {\r\n                                const text = I18n.t(this.props.schema.alert);\r\n                                const lines = text.split('\\n').map(line => <div key={line} style={{ minHeight: 24 }}>{line}</div>);\r\n                                this.setState({ message: { text: lines, title: I18n.t(this.props.schema.title) } });\r\n                            }\r\n                        }\r\n                        this.props.onChange({ ...this.props.data, [this.props.attr]: e.target.checked });\r\n                    }}\r\n                />}\r\n                label={I18n.t(this.props.schema.label || this.props.schema.adapter)}\r\n            />\r\n            {this.renderMessage()}\r\n        </>;\r\n    }\r\n}\r\n\r\nAdapterExist.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default AdapterExist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport { ConfigGeneric, I18n } from '@iobroker/adapter-react-v5';\r\nimport {\r\n    Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControlLabel, LinearProgress, TextField,\r\n} from '@mui/material';\r\nimport { CloudUpload } from '@mui/icons-material';\r\n\r\nconst styles = {\r\n    paper: {\r\n        height: 'calc(100% - 64px)',\r\n    },\r\n    fullHeight: {\r\n        height: '100%',\r\n        '& .MuiInputBase-root': {\r\n            height: '100%',\r\n        },\r\n    },\r\n    textLevel: {\r\n        display: 'inline-block',\r\n        width: 40,\r\n    },\r\n    'textLevel-ERROR': {\r\n        color: 'red',\r\n    },\r\n    'textLevel-WARN': {\r\n        color: 'orange',\r\n    },\r\n    textSource: {\r\n        display: 'inline-block',\r\n        width: 70,\r\n        marginRight: 8,\r\n        textAlign: 'right',\r\n    },\r\n    text: {\r\n        display: 'inline-block',\r\n    }\r\n};\r\n\r\n\r\nconst DEBUGLOG = `[ERROR] [iobroker] - Debugger listening on ws://127.0.0.1:52136/a2d4655f-b965-4e25-b07c-3ef13725d923\r\nFor help, see: https://nodejs.org/en/docs/inspector\r\n\r\n[ERROR] [iobroker] - Debugger attached.\r\n\r\n[DEBUG] [iobroker] - host.MSI 11856 states saved\r\n\r\n[DEBUG] [iobroker] - host.MSI 14814 objects saved\r\n\r\n[ERROR] [iobroker] - host.MSI Please ensure that self-created JSON files are valid\r\n\r\n[DEBUG] [iobroker] - This backup can only be restored with js-controller version up from 4.1\r\n\r\n[ERROR] [iobroker] - Waiting for the debugger to disconnect...\r\n\r\n[DEBUG] [iobroker] - done\r\n[DEBUG] [influxDB] - InfluxDB-Backup started ...\r\n[DEBUG] [influxDB] - InfluxDB Backup tmp directory created \r\n[DEBUG] [influxDB] - done\r\n[ERROR] [sqlite] - Error: Command failed: sqlite3  .dump > C:\\\\pWork\\\\backups\\\\sqlite_2024_04_05-22_45_53_backupiobroker.sql\r\nDer Befehl \"sqlite3\" ist entweder falsch geschrieben oder\r\nkonnte nicht gefunden werden.\r\n`;\r\nclass BackupNow extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            executing: false,\r\n            executionDialog: false,\r\n            executionLog: [],\r\n            closeOnReady: false,\r\n        };\r\n        this.lastExecutionLine = '';\r\n        this.textRef = React.createRef();\r\n    }\r\n\r\n    onOutput = (id, state)  => {\r\n        if (state && state.val && state.val !== this.lastExecutionLine) {\r\n            this.lastExecutionLine = state.val;\r\n            const executionLog = [...this.state.executionLog];\r\n            executionLog.push(state.val);\r\n            this.setState({ executionLog });\r\n            if (state.val.startsWith('[EXIT]')) {\r\n                this.setState({ executing: false });\r\n                const code = state.val.match(/^\\[EXIT] ([-\\d]+)/);\r\n                if (this.state.closeOnReady && (!code || code[1] === '0')) {\r\n                    this.closeTimeout = this.closeTimeout || setTimeout(() => {\r\n                        this.closeTimeout = null;\r\n                        this.setState({ executionDialog: false });\r\n                    }, 1500);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n        await this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.oneClick.${this.props.schema.backUpType}`, this.onEnabled);\r\n        await this.props.socket.subscribeState(`${this.props.adapterName}.${this.props.instance}.output.line`, this.onOutput);\r\n    }\r\n\r\n    onEnabled = (id, state) => {\r\n        if (id === `${this.props.adapterName}.${this.props.instance}.oneClick.${this.props.schema.backUpType}`) {\r\n            if (!!state?.val !== this.state.executing) {\r\n                this.setState({ executing: !!state?.val });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.oneClick.${this.props.schema.backUpType}`, this.onEnabled);\r\n        this.props.socket.unsubscribeState(`${this.props.adapterName}.${this.props.instance}.output.line`, this.onOutput);\r\n        this.closeTimeout && clearTimeout(this.closeTimeout);\r\n        this.closeTimeout = null;\r\n    }\r\n\r\n    renderLine(line, i) {\r\n        const parts = line.match(/^\\[(\\w+)] \\[(\\w+)] - (.*)/);\r\n        if (parts) {\r\n            return <div key={i}>\r\n                <div\r\n                    className={`${this.props.classes.textLevel} ${this.props.classes[`textLevel-${parts[1]}`]}`}>{parts[1]}</div>\r\n                <div className={this.props.classes.textSource}>{parts[2]}</div>\r\n                <div className={this.props.classes.text}>{parts[3]}</div>\r\n            </div>;\r\n        }\r\n        return <div key={i}>\r\n            <div className={this.props.classes.textLevel} />\r\n            <div className={this.props.classes.textSource} />\r\n            <div className={this.props.classes.text}>{line}</div>\r\n        </div>;\r\n    }\r\n\r\n    renderExecutionDialog() {\r\n        return this.state.executionDialog ? <Dialog\r\n            open={!0}\r\n            onClose={() => this.setState({executionDialog: false})}\r\n            maxWidth=\"md\"\r\n            fullWidth\r\n            classes={{paper: this.props.classes.paper}}\r\n        >\r\n            <DialogTitle>\r\n            {I18n.t('BackItUp execution:')}\r\n            </DialogTitle>\r\n            <DialogContent style={{ position: 'relative' }}>\r\n                {this.state.executing ?\r\n                    <LinearProgress\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 24,\r\n                            width: 'calc(100% - 48px)',\r\n                        }}\r\n                    /> : null}\r\n                <div\r\n                    style={{\r\n                        height: 'calc(100% - 16px - 4px)',\r\n                        width: 'calc(100% - 16px)',\r\n                        fontSize: 12,\r\n                        fontFamily: 'monospace',\r\n                        marginTop: 4,\r\n                        padding: 8,\r\n                    }}\r\n                    ref={this.textRef}\r\n                >\r\n                    {this.state.executionLog.map((line, i) => this.renderLine(line, i))}\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            disabled={!this.state.executing}\r\n                            checked={this.state.closeOnReady}\r\n                            onChange={e => this.setState({ closeOnReady: e.target.checked })}\r\n                        />\r\n                    }\r\n                    label={I18n.t('Close on ready')}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => this.setState({ executionDialog: false })}\r\n                >\r\n                    {I18n.t('Close')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog> : null;\r\n    }\r\n\r\n    renderItem() {\r\n        return <>\r\n            <Button\r\n                disabled={!this.props.alive || this.state.executing}\r\n                onClick={() => this.setState({ executionDialog: true, executionLog: DEBUGLOG.split('\\n'), executing: true }, async () => {\r\n                    this.lastExecutionLine = '';\r\n                    // await this.props.socket.setState(`${this.props.adapterName}.${this.props.instance}.oneClick.${this.props.schema.backUpType}`, true);\r\n                })}\r\n                color={this.props.color}\r\n                variant=\"contained\"\r\n                endIcon={<CloudUpload />}\r\n            >\r\n                {this.props.schema.label ? I18n.t(this.props.schema.label) : I18n.t('Backup now')}\r\n            </Button>\r\n            {this.renderExecutionDialog()}\r\n        </>;\r\n    }\r\n}\r\n\r\nBackupNow.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    style: PropTypes.object,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(BackupNow);\r\n","import { ConfigGeneric, I18n, Message } from '@iobroker/adapter-react-v5';\r\n\r\nclass BaseField extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.message = false;\r\n    }\r\n\r\n    isConfigFilled(type) {\r\n        if (type === 'ccu') {\r\n            return !!this.props.data.ccuHost && !!this.props.data.ccuEnabled;\r\n        }\r\n        if (type === 'mySql') {\r\n            return !!this.props.data.mySqlUser && !!this.props.data.mySqlEnabled;\r\n        }\r\n        if (type === 'sqlite') {\r\n            return !!this.props.data.sqlitePath && !!this.props.data.sqliteEnabled;\r\n        }\r\n        if (type === 'pgSql') {\r\n            return !!this.props.data.pgSqlUser && !!this.props.data.pgSqlEnabled;\r\n        }\r\n        if (type === 'influxDB') {\r\n            return !!this.props.data.influxDBName && !!this.props.data.influxDBEnabled;\r\n        }\r\n        if (type === 'history') {\r\n            return !!this.props.data.historyPath && !!this.props.data.historyEnabled;\r\n        }\r\n        this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('Unknown config type %s', type));\r\n        return false;\r\n    }\r\n\r\n    fetchConfig = async (type, isInitial) => {\r\n        if (type === 'ccu') {\r\n            await this.fetchCcuConfig(isInitial);\r\n        } else if (type === 'mySql') {\r\n            await this.fetchMySqlConfig(isInitial);\r\n        } else if (type === 'sqlite') {\r\n            await this.fetchSqliteConfig(isInitial);\r\n        } else if (type === 'pgSql') {\r\n            await this.fetchPgSqlConfig(isInitial);\r\n        } else if (type === 'influxDB') {\r\n            await this.fetchInfluxDBConfig(isInitial);\r\n        } else if (type === 'history') {\r\n            await this.fetchHistoryConfig(isInitial);\r\n        } else {\r\n            this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('Unknown config type %s', type));\r\n        }\r\n    };\r\n\r\n    async fetchCcuConfig(isInitial) {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.hm-rpc.', 'system.adapter.hm-rpc.\\u9999'));\r\n\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                if (common.enabled) {\r\n                    const native = result[i].native;\r\n                    this.props.onChange({ ...this.props.data, ccuHost: native.homematicAddress, ccuUsehttps: native.useHttps });\r\n                    found = result[i]._id;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    const _native = result[j].native;\r\n                    this.props.onChange({ ...this.props.data, ccuHost: _native.homematicAddress, ccuUsehttps: _native.useHttps });\r\n                    found = result[j]._id;\r\n                }\r\n            }\r\n        }\r\n        if (found) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Information!'), I18n.t('Config taken from %s', found));\r\n        } else {\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('No config found'));\r\n        }\r\n    }\r\n\r\n    async fetchMySqlConfig(isInitial) {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.sql.', 'system.adapter.sql.\\u9999'));\r\n\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                const native = result[i].native;\r\n                if (common.enabled && native.dbtype === 'mysql') {\r\n                    this.props.onChange({\r\n                        ...this.props.data,\r\n                        mySqlUser: native.user,\r\n                        mySqlPassword: native.password,\r\n                        mySqlHost: native.host,\r\n                        mySqlPort: native.port === '0' ? 3306 : native.port || 3306,\r\n                        mySqlName: native.dbname,\r\n                    });\r\n                    found = result[i]._id;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    const _native = result[j].native;\r\n                    if (_native.dbtype === 'mysql') {\r\n                        this.props.onChange({\r\n                            ...this.props.data,\r\n                            mySqlUser: _native.user,\r\n                            mySqlPassword: _native.password,\r\n                            mySqlHost: _native.host,\r\n                            mySqlPort: _native.port === '0' ? 3306 : _native.port || 3306,\r\n                            mySqlName: _native.dbname,\r\n                        });\r\n                        found = result[j]._id;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (found) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Information!'), I18n.t('Config taken from %s', found));\r\n        } else {\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('No config found'));\r\n        }\r\n    }\r\n\r\n    async fetchSqliteConfig(isInitial) {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.sql.', 'system.adapter.sql.\\u9999'));\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                const native = result[i].native;\r\n                if (common.enabled && native && native.dbtype === 'sqlite' && native.fileName) {\r\n                    const pathLength = native.fileName.split('/');\r\n                    this.props.onChange({\r\n                        ...this.props.data,\r\n                        sqlitePath: pathLength > 1 ? native.fileName : `/opt/iobroker/iobroker-data/sqlite/${native.fileName}`,\r\n                    });\r\n                    found = result[i]._id;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    const _native = result[j].native;\r\n                    if (_native && _native.dbtype === 'sqlite' && _native.fileName) {\r\n                        const pathLength = _native.fileName.split('/');\r\n                        this.props.onChange({\r\n                            ...this.props.data,\r\n                            sqlitePath: pathLength > 1 ? _native.fileName : `/opt/iobroker/iobroker-data/sqlite/${_native.fileName}`,\r\n                        });\r\n                        found = result[j]._id;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (found) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Information!'), I18n.t('Config taken from %s', found));\r\n        } else {\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('No config found'));\r\n        }\r\n    }\r\n\r\n    async fetchPgSqlConfig(isInitial) {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.sql.', 'system.adapter.sql.\\u9999'));\r\n\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                const native = result[i].native;\r\n                if (common.enabled && native.dbtype === 'postgresql') {\r\n                    this.props.onChange({\r\n                        ...this.props.data,\r\n                        pgSqlUser: native.user,\r\n                        pgSqlPassword: native.password,\r\n                        pgSqlHost: native.host,\r\n                        pgSqlPort: native.port === '0' ? 5432 : native.port || 5432,\r\n                        pgSqlName: native.dbname,\r\n                    });\r\n                    found = result[i]._id;\r\n\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    const _native = result[j].native;\r\n                    if (_native.dbtype === 'postgresql') {\r\n                        this.props.onChange({\r\n                            ...this.props.data,\r\n                            pgSqlUser: _native.user,\r\n                            pgSqlPassword: _native.password,\r\n                            pgSqlHost: _native.host,\r\n                            pgSqlPort: _native.port === '0' ? 5432 : _native.port || 5432,\r\n                            pgSqlName: _native.dbname,\r\n                        });\r\n                        found = result[j]._id;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Information!'), I18n.t('Config taken from %s', found));\r\n        } else {\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('No config found'));\r\n        }\r\n    }\r\n\r\n    async fetchInfluxDBConfig(isInitial) {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.influxdb.', 'system.adapter.influxdb.\\u9999'));\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                const native = result[i].native;\r\n                if (common.enabled) {\r\n                    const settings = {\r\n                        influxDBHost: native.host,\r\n                        influxDBVersion: native.dbversion,\r\n                        influxDBProtocol: native.protocol,\r\n                        influxDBName: native.dbname,\r\n                    };\r\n                    if (native.port && native.dbversion && native.dbversion === '2.x') {\r\n                        settings.influxDBPort = native.port;\r\n                    }\r\n                    this.props.onChange({\r\n                        ...this.props.data,\r\n                        settings,\r\n                    });\r\n\r\n                    found = result[i]._id;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found && result.length && result[0].native) {\r\n                const _native = result[0].native;\r\n                const settings = {\r\n                    influxDBHost: _native.host,\r\n                    influxDBVersion: _native.dbversion,\r\n                    influxDBProtocol: _native.protocol,\r\n                    influxDBName: _native.dbname,\r\n                };\r\n                if (_native.port && _native.dbversion && _native.dbversion === '2.x') {\r\n                    settings.influxDBPort = _native.port;\r\n                }\r\n                this.props.onChange({\r\n                    ...this.props.data,\r\n                    settings,\r\n                });\r\n                found = result[0]._id;\r\n            }\r\n        }\r\n        if (found) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Information!'), I18n.t('Config taken from %s', found));\r\n        } else {\r\n            !isInitial && this.showMessage(I18n.t('BackItUp Warning!'), I18n.t('No config found'));\r\n        }\r\n    }\r\n\r\n    async fetchHistoryConfig(isInitial) {\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', 'system.adapter.history.', 'system.adapter.history.\\u9999'));\r\n        let storeDir = '';\r\n        let found = false;\r\n        if (result && result.length) {\r\n            for (let i = 0; i < result.length; i++) {\r\n                const common = result[i].common;\r\n                const native = result[i].native;\r\n                if (common.enabled) {\r\n                    this.props.onChange({\r\n                        ...this.props.data,\r\n                        historyPath: native.storeDir && !native.storeDir.startsWith('/opt/iobroker/backups') ? native.storeDir : '/opt/iobroker/iobroker-data/history',\r\n                    });\r\n                    storeDir = native.storeDir;\r\n                    found = result[i]._id;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    const _native = result[j].native;\r\n                    this.props.onChange({\r\n                        ...this.props.data,\r\n                        historyPath: _native.storeDir && !_native.storeDir.startsWith('/opt/iobroker/backups') ? _native.storeDir : '/opt/iobroker/iobroker-data/history',\r\n                    });\r\n                    storeDir = _native.storeDir;\r\n                    found = result[j]._id;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (found && !storeDir) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('No storage path of %s is configured.\\nThe default path of the history adapter has been set.', found), I18n.t('BackItUp Information!'));\r\n        } else if (found && storeDir && storeDir.startsWith('/opt/iobroker/backups')) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('The storage path of %s must not be identical to the path for backups.\\nThe default path of the history adapter has been set.\\n\\nPlease change the path in the history adapter!', found), I18n.t('BackItUp Information!'));\r\n        } else if (found && storeDir) {\r\n            found = found.substring('system.adapter.'.length);\r\n            !isInitial && this.showMessage(I18n.t('Config taken from %s', found), I18n.t('BackItUp Information!'));\r\n        } else {\r\n            !isInitial && this.showMessage(I18n.t('No config found'), I18n.t('BackItUp Warning!'));\r\n        }\r\n    }\r\n\r\n    checkAdapterInstall = async name => {\r\n        const backItUpHost = this.props.common.host;\r\n        const ignore = false;\r\n        let adapterName = name;\r\n\r\n        if (name === 'pgsql' || name === 'mysql' || name === 'sqlite') {\r\n            adapterName = 'sql';\r\n        }\r\n\r\n        const SHOW_MESSAGE_FOR = [\r\n            'zigbee',\r\n            'esphome',\r\n            'zigbee2mqtt',\r\n            'node-red',\r\n            'yahka',\r\n            'jarvis',\r\n            'history',\r\n        ];\r\n\r\n        if (!ignore) {\r\n            const res = Object.values(await this.props.socket.getObjectViewCustom('system', 'instance', `system.adapter.${adapterName}.`, `system.adapter.${adapterName}.\\u9999`));\r\n            if (res?.length) {\r\n                for (let i = 0; i < res.length; i++) {\r\n                    const common = res[i].common;\r\n\r\n                    if (common.host !== backItUpHost && SHOW_MESSAGE_FOR.includes(adapterName)) {\r\n                        this.showMessage(I18n.t('BackItUp Warning!'),\r\n                            I18n.t('No %s Instance found on this host. Please check your System', adapterName));\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (SHOW_MESSAGE_FOR.includes(adapterName)) {\r\n                this.showMessage(I18n.t('BackItUp Warning!'),\r\n                    I18n.t('No %s Instance found on this host. Please check your System', adapterName));\r\n            }\r\n        }\r\n    };\r\n\r\n    showMessage = (title, text) => {\r\n        this.setState({ message: { title, text } });\r\n    };\r\n\r\n    renderMessage() {\r\n        return this.state.message ? <Message\r\n            title={this.state.message.title}\r\n            text={this.state.message.text}\r\n            onClose={() => this.setState({ message: false })}\r\n        /> : null;\r\n    }\r\n}\r\n\r\nexport default BaseField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button } from '@mui/material';\r\n\r\nimport { Search } from '@mui/icons-material';\r\n\r\nimport { I18n } from '@iobroker/adapter-react-v5';\r\n\r\nimport BaseField from './BaseField';\r\n\r\nclass DetectConfig extends BaseField {\r\n    renderItem() {\r\n        return <>\r\n            <Button\r\n                variant=\"contained\"\r\n                endIcon={<Search />}\r\n                onClick={async () => {\r\n                    await this.fetchConfig(this.props.schema.adapter);\r\n                }}\r\n            >\r\n                {I18n.t('Detect config')}\r\n            </Button>\r\n            {this.renderMessage()}\r\n        </>;\r\n    }\r\n}\r\n\r\nDetectConfig.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default DetectConfig;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport BaseField from './BaseField';\r\n\r\nclass DetectConfigInvisible extends BaseField {\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n        if (!this.isConfigFilled(this.props.schema.adapter)) {\r\n            await this.fetchConfig(this.props.schema.adapter, true);\r\n        }\r\n    }\r\n\r\n    renderItem() {\r\n        return this.renderMessage();\r\n    }\r\n}\r\n\r\nDetectConfigInvisible.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default DetectConfigInvisible;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Button, TextField } from '@mui/material';\r\nimport { CloudUpload } from '@mui/icons-material';\r\n\r\nimport { ConfigGeneric, i18n as I18n } from '@iobroker/adapter-react-v5';\r\n\r\nclass GoogleDrive extends ConfigGeneric {\r\n    renderItem() {\r\n        return <div style={{ width: '100%' }}>\r\n            <Button\r\n                disabled={!this.props.alive || this.state.running}\r\n                endIcon={<CloudUpload />}\r\n                variant=\"contained\"\r\n                onClick={() => this.setState({ running: true }, async () => {\r\n                    const result = await this.props.socket.sendTo(`${this.props.adapterName}.${this.props.instance}`, 'authGoogleDrive');\r\n                    this.setState({ googleDriveUrl: result.url, running: false });\r\n                })}\r\n            >\r\n                {I18n.t(\r\n                    this.props.data.googledriveAccessTokens ?\r\n                        'Renew google drive access' :\r\n                        'Get google drive access',\r\n                )}\r\n            </Button>\r\n            {this.state.googleDriveUrl ? <>\r\n                <div style={{ width: '100%' }}>\r\n                    {`${I18n.t('Authorize this app by visiting this url')}: `}\r\n                    <a\r\n                        target=\"_blank\"\r\n                        href={this.state.googleDriveUrl}\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        {this.state.googleDriveUrl}\r\n                    </a>\r\n                </div>\r\n                <TextField\r\n                    label={I18n.t('Enter the code from that page here')}\r\n                    variant=\"standard\"\r\n                    value={this.props.data.googledriveAccessTokens || ''}\r\n                    onChange={e => this.props.onChange({ ...this.props.data, googledriveAccessTokens: e.target.value })}\r\n                    fullWidth\r\n                />\r\n            </> : null}\r\n        </div>;\r\n    }\r\n}\r\n\r\nGoogleDrive.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default GoogleDrive;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    FormControl, FormHelperText, InputLabel,\r\n    MenuItem, Select, TextField,\r\n} from '@mui/material';\r\n\r\nimport { I18n, ConfigGeneric } from '@iobroker/adapter-react-v5';\r\n\r\nimport BaseField from './BaseField';\r\n\r\nclass Instance extends BaseField {\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n        const instance = ConfigGeneric.getValue(this.props.data, this.props.attr);\r\n        const target = ConfigGeneric.getValue(this.props.data, this.props.schema.adapter === 'telegram' ? 'telegramUser' : 'discordTarget');\r\n        const result = Object.values(await this.props.socket.getObjectViewCustom(\r\n            'system',\r\n            'instance',\r\n            `system.adapter.${this.props.schema.adapter}.`,\r\n            `system.adapter.${this.props.schema.adapter}.\\u9999`,\r\n        ));\r\n\r\n        const instances = result.map(item => ({ value: item._id.substring('system.adapter.'.length), label: item._id.substring('system.adapter.'.length) }));\r\n        instances.unshift({ value: '_', label: 'none' });\r\n\r\n        this.setState({ instances, instance, target }, () => {\r\n            this.readTargets();\r\n        });\r\n    }\r\n\r\n    async fillTelegramUser() {\r\n        if (this.state.instance?.startsWith('telegram.')) {\r\n            if (this.instanceRead !== this.state.instance) {\r\n                let useUserName = false;\r\n                const obj = await this.props.socket.getObject(`system.adapter.${this.state.instance}`);\r\n                if (obj && obj.native) {\r\n                    useUserName = obj.native.useUsername;\r\n                }\r\n                const state = await this.props.socket.getState(`${this.state.instance}.communicate.users`);\r\n                const userListStr = state?.val;\r\n                const targets = [{ value: 'allTelegramUsers', label: 'All Receiver' }];\r\n\r\n                if (userListStr) {\r\n                    this.instanceRead = this.state.target;\r\n                    const userList = JSON.parse(userListStr);\r\n                    for (const i in userList) {\r\n                        if (useUserName) {\r\n                            targets.push({ value: userList[i].userName, label: userList[i].userName });\r\n                        } else {\r\n                            targets.push({ value: userList[i].firstName, label: userList[i].firstName });\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({ targets });\r\n            }\r\n        } else if (this.props.data.telegramUser !== 'allTelegramUsers') {\r\n            setTimeout(() => this.props.onChange({ ...this.props.data, telegramUser: 'allTelegramUsers' }), 50);\r\n        }\r\n    }\r\n\r\n    async fillDiscordTarget() {\r\n        if (this.state.instance?.startsWith('discord.')) {\r\n            if (this.instanceRead !== this.state.instance) {\r\n                const alive = await this.props.socket.getState(`system.adapter.${this.state.instance}.alive`);\r\n                if (alive?.val) {\r\n                    const targetList = await this.props.socket.sendTo(this.state.instance, 'getNotificationTargets', {});\r\n                    if (Array.isArray(targetList)) {\r\n                        this.instanceRead = this.state.instance;\r\n                        const targets = [{ value: '_', label: 'none' }];\r\n                        for (const i in targetList) {\r\n                            targets.push({ value: targetList[i].value, label: targetList[i].label });\r\n                        }\r\n                        this.setState({ targets });\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const targets = [{ value: '_', label: 'none' }];\r\n            this.setState({ targets });\r\n            if (this.props.data.discordTarget) {\r\n                setTimeout(() => this.props.onChange({ ...this.props.data, discordTarget: '' }), 50);\r\n            }\r\n        }\r\n    }\r\n\r\n    async readTargets() {\r\n        if (this.props.schema.adapter === 'telegram') {\r\n            await this.fillTelegramUser();\r\n        } else if (this.props.schema.adapter === 'discord') {\r\n            await this.fillDiscordTarget();\r\n        }\r\n    }\r\n\r\n    renderItem() {\r\n        const itemInstance = this.state.instances?.find(it => it.value === (this.state.instance || ''));\r\n        const itemTarget = this.state.targets?.find(it => it.value === (this.state.target || ''));\r\n\r\n        return <div style={{ width: '100%' }}>\r\n            {this.state.instances ? <FormControl style={{ width: 'calc(50% - 5px)', marginRight: 10 }} variant=\"standard\">\r\n                <InputLabel>{I18n.t(this.props.schema.label)}</InputLabel>\r\n                <Select\r\n                    variant=\"standard\"\r\n                    value={this.state.instance || '_'}\r\n                    renderValue={() => this.getText(itemInstance?.label, itemInstance?.label !== 'none')}\r\n                    onChange={e => this.setState({ instance: e.target.value === '_' ? '' : e.target.value }, () => {\r\n                        this.readTargets();\r\n                        this.onChange(this.props.attr, this.state.value);\r\n                    })}\r\n                >\r\n                    {this.state.instances.map((it, i) => <MenuItem key={i} value={it.value}>\r\n                        {this.getText(it.label, it?.label !== 'none')}\r\n                    </MenuItem>)}\r\n                </Select>\r\n                {this.props.schema.help ? <FormHelperText>{this.renderHelp(this.props.schema.help, this.props.schema.helpLink, this.props.schema.noTranslation)}</FormHelperText> : null}\r\n            </FormControl> : null}\r\n            {this.state.targets ? <FormControl style={{ width: 'calc(50% - 5px)' }} variant=\"standard\">\r\n                <InputLabel>{I18n.t(this.props.schema.adapter === 'telegram' ? 'Telegram Receiver' : 'Discord receiver')}</InputLabel>\r\n                <Select\r\n                    disabled={!this.state.instance}\r\n                    variant=\"standard\"\r\n                    value={this.state.target || '_'}\r\n                    renderValue={() => this.getText(itemTarget?.label, itemTarget?.label !== 'none')}\r\n                    onChange={e => this.setState({ target: e.target.value === '_' ? '' : e.target.value }, () =>\r\n                        this.onChange(this.props.schema.adapter === 'telegram' ? 'telegramUser' : 'discordTarget', this.state.target))}\r\n                >\r\n                    {this.state.targets.map((it, i) => <MenuItem key={i} value={it.value}>\r\n                        {this.getText(it.label, it?.label !== 'none')}\r\n                    </MenuItem>)}\r\n                </Select>\r\n                {this.props.schema.help ? <FormHelperText>{this.renderHelp(this.props.schema.help, this.props.schema.helpLink, this.props.schema.noTranslation)}</FormHelperText> : null}\r\n            </FormControl> : <TextField\r\n                style={{ width: 'calc(50% - 5px)' }}\r\n                variant=\"standard\"\r\n                disabled={!this.state.instance}\r\n                label={I18n.t(this.props.schema.adapter === 'telegram' ? 'Telegram Receiver' : 'Discord receiver')}\r\n                value={this.state.target}\r\n                onChange={e => this.setState({ target: e.target.value }, () =>\r\n                    this.onChange(this.props.schema.adapter === 'telegram' ? 'telegramUser' : 'discordTarget', this.state.target))}\r\n            />}\r\n        </div>;\r\n    }\r\n}\r\n\r\nInstance.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default Instance;\r\n"],"names":["AdapterExist","e","err","lines","line","styles","DEBUGLOG","BackupNow","props","id","state","executionLog","code","i","parts","BaseField","type","isInitial","name","backItUpHost","ignore","adapterName","SHOW_MESSAGE_FOR","res","title","text","result","found","native","j","_native","common","pathLength","settings","storeDir","DetectConfig","DetectConfigInvisible","GoogleDrive","Instance","instance","target","instances","item","useUserName","obj","userListStr","targets","userList","alive","targetList","itemInstance","it","itemTarget"],"sourceRoot":""}