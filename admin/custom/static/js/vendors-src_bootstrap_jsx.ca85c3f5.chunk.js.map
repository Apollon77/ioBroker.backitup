{"version":3,"file":"static/js/vendors-src_bootstrap_jsx.ca85c3f5.chunk.js","mappings":"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","sources":["App.jsx","theme.js","bootstrap.jsx","../node_modules/react-dom/client.js"],"sourcesContent":["// this file used only for simulation and not used in end build\n\nimport React from 'react';\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\n\nimport withStyles from '@mui/styles/withStyles';\n\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\nimport { I18n, Loader } from '@iobroker/adapter-react-v5';\n\nimport AdapterExist from './AdapterExist';\nimport BackupNow from './BackupNow';\nimport DetectConfig from './DetectConfig';\nimport GoogleDrive from './GoogleDrive';\nimport Onedrive from './Onedrive';\nimport Dropbox from './Dropbox';\nimport CheckConfigInvisible from './CheckConfigInvisible';\nimport Instance from './Instance';\nimport RestoreBackup from './RestoreBackup';\n\nconst styles = theme => ({\n    app: {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n        height: '100%',\n    },\n    item: {\n        padding: 50,\n        width: 400,\n    },\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = { ...props };\n        super(props, extendedProps);\n\n        this.state = {\n            data: {\n                myCustomAttribute: 'red',\n                telegramInstance: 'telegram.0',\n            },\n            theme: this.createTheme(),\n        };\n        const translations = {\n            en: require('./i18n/en'),\n            de: require('./i18n/de'),\n            ru: require('./i18n/ru'),\n            pt: require('./i18n/pt'),\n            nl: require('./i18n/nl'),\n            fr: require('./i18n/fr'),\n            it: require('./i18n/it'),\n            es: require('./i18n/es'),\n            pl: require('./i18n/pl'),\n            uk: require('./i18n/uk'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n\n        I18n.setTranslations(translations);\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.state.theme}>\n                    <Loader theme={this.state.themeType} />\n                </ThemeProvider>\n            </StyledEngineProvider>;\n        }\n\n        return <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={this.state.theme}>\n                <div className={this.props.classes.app}>\n                    <div className={this.props.classes.item}>\n                        <AdapterExist\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/AdapterExist',\n                                type: 'custom',\n                                // adapter: 'zigbee',\n                                title: 'BackItUp Information!',\n                                alert: 'The JavaScript Adapter scripts are already saved in the ioBroker backup.\\n\\nThis option is just an additional option to be able to restore the scripts individually if necessary.',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <BackupNow\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            alive\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/BackupNow',\n                                type: 'custom',\n                                backUpType: 'ccu',\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <DetectConfig\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/DetectConfig',\n                                type: 'custom',\n                                adapter: 'ccu',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <CheckConfigInvisible\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/DetectConfigInvisible',\n                                type: 'custom',\n                                adapter: 'ccu',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <GoogleDrive\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/GoogleDrive',\n                                type: 'custom',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <Onedrive\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/Onedrive',\n                                type: 'custom',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <Dropbox\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"myCustomAttribute\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/Dropbox',\n                                type: 'custom',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <Instance\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr=\"telegramInstance\"\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/Instance',\n                                type: 'custom',\n                                adapter: 'telegram',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                            common={this.common}\n                        />\n                        <RestoreBackup\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomBackItUpSet/Components/RestoreBackup',\n                                type: 'custom',\n                                allowDownload: false,\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                            adapterName=\"backitup\"\n                        />\n                    </div>\n                </div>\n            </ThemeProvider>\n        </StyledEngineProvider>;\n    }\n}\n\nexport default withStyles(styles)(App);\n","// this file used only for simulation and not used in end build\nimport Theme from '@iobroker/adapter-react-v5/Theme';\n\nexport default type => {\n    const danger = '#dd5325';\n    const success = '#73b6a8';\n    const theme = { ...Theme(type) };\n    if (!theme) {\n        return theme;\n    }\n    theme.palette.text.danger = {\n        color: danger,\n    };\n    theme.palette.text.success = {\n        color: success,\n    };\n\n    return theme;\n};\n","// this file used only for simulation and not used in end build\n\n/* eslint-disable */\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport Utils from '@iobroker/adapter-react-v5/Components/Utils';\nimport App from './App';\nimport theme from './theme';\n\nwindow.adapterName = 'adapter-component-template';\nlet themeName = Utils.getThemeName();\n\nfunction build() {\n    const container = document.getElementById('root');\n    const root = createRoot(container);\n    return root.render(<React.StrictMode>\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme(themeName)}>\n                <App\n                    socket={{port: 8081}}\n                    onThemeChange={(_theme) => {\n                        themeName = _theme;\n                        build();\n                    }}\n                    adapterName=\"backitup\"\n                />\n            </ThemeProvider>\n        </StyledEngineProvider>\n    </React.StrictMode>);\n}\n\nbuild();","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["styles","theme","App","props","extendedProps","translations","StyledEngineProvider","ThemeProvider","AdapterExist","data","BackupNow","DetectConfig","CheckConfigInvisible","GoogleDrive","Onedrive","Dropbox","Instance","RestoreBackup","withStyles","type","danger","success","Theme","themeName","build","container","_theme","m","exports"],"sourceRoot":""}